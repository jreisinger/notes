<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devops on Notes</title>
    <link>https://jreisinger.github.io/notes/categories/devops/</link>
    <description>Recent content in Devops on Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 27 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jreisinger.github.io/notes/categories/devops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kubernetes</title>
      <link>https://jreisinger.github.io/notes/posts/kubernetes/</link>
      <pubDate>Wed, 27 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jreisinger.github.io/notes/posts/kubernetes/</guid>
      <description>Components Configuration cat ~/.kube/config # or kubectl config view Namespace  group of objects in a cluster similar to a filesystem folder  kubectl get namespaces Context  to change the default namespace more permanently to manage different clusters to manage different users  # list contexts kubectl config get-contexts # switch context kubectl config use-context &amp;lt;context-name&amp;gt; Objects  everything in Kubernetes is represented by a RESTful resource (a.k.a. a Kubernetes object) each object exists at a unique HTTP path, e.</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>https://jreisinger.github.io/notes/posts/docker/</link>
      <pubDate>Mon, 24 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jreisinger.github.io/notes/posts/docker/</guid>
      <description>Docker is a container technology. Cointainers standardize software packaging. It&amp;rsquo;s a well timed fusion of
 kernel features (cgroups, namespaces) filesystem tricks (UnionFS) networking hacks (iptables)  Think of a container not as a virtual machine but a very lightweight wrapper around an isolated group of processes. These processes are restricted to private root filesystem and process namespace.
Docker revision-controls:
 filesystem layers image tags  Architecture Terminology Docker server - the docker command run in daemon mode on a Linux host:</description>
    </item>
    
  </channel>
</rss>