<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sre on Notes</title>
    <link>https://jreisinger.github.io/notes/tags/sre/</link>
    <description>Recent content in Sre on Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 15 Dec 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jreisinger.github.io/notes/tags/sre/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SRE</title>
      <link>https://jreisinger.github.io/notes/posts/sre/</link>
      <pubDate>Sat, 15 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jreisinger.github.io/notes/posts/sre/</guid>
      <description>Hope is not a strategy. &amp;ndash; SRE saying
 Two approaches to run a computing system: sysadmin, SRE.
Sysadmin approach  traditional way assemble existing SW components to produce a service run the service  Advantages
 relatively easy to implement for companies (familiar industry paradigm, lots of examples to emulate, wide talent pool, existing tools and consultants)  Disadvantages
 team size scales linearly with the load generated by the system you end up with two different teams (product developers and product operators) that often live in conflict  SRE approach  hire software engineers to run products they create systems that do the work otherwise done by sysadmins  Advantages</description>
    </item>
    
  </channel>
</rss>