<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sysadmin on Notes</title>
    <link>https://jreisinger.github.io/notes/tags/sysadmin/</link>
    <description>Recent content in sysadmin on Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 26 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jreisinger.github.io/notes/tags/sysadmin/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Perl One Liners</title>
      <link>https://jreisinger.github.io/notes/posts/perl-one-liners/</link>
      <pubDate>Wed, 26 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jreisinger.github.io/notes/posts/perl-one-liners/</guid>
      <description>I think Perl one liners are still super useful (even Kubernetes people like them to do their jobs :-). They are small Perl programs that are run directly from a command line (ex. on Unix/Linux, Cygwin). For a deeper dive see Famous Perl One-Liners Explained. If you want a book have a look at Minimal Perl for UNIX and Linux People.
perl command line switches  -e &#39;&amp;lt;code&amp;gt;&#39; (execute) &amp;ndash; execute &amp;lt;code&amp;gt; -E &#39;&amp;lt;code&amp;gt;&#39; (execute) &amp;ndash; execute &amp;lt;code&amp;gt; enabling feature bundle (like use 5.</description>
    </item>
    
    <item>
      <title>Linux Performance Analysis</title>
      <link>https://jreisinger.github.io/notes/posts/linux-performance-analysis/</link>
      <pubDate>Sun, 14 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jreisinger.github.io/notes/posts/linux-performance-analysis/</guid>
      <description>Taking stock of hardware Sources of hardware information:
lscpu /proc/cpuinfo # one entry for each core seen by the OS free -m /proc/meminfo hpacucli ctrl all show config [detail] # HP physical RAID lsblk [-o KNAME,TYPE,SIZE,MODEL] # installed on RHEL/CentOS parted -l # supports both MBR (msdos) and GPT fdisk -l # only traditional MBR partition table cat /proc/diskstats dmsetup ls # LVM device mapper udevadm info --query=all --name=/dev/sda Desktop Management Interface (DMI, aka SMBIOS):</description>
    </item>
    
    <item>
      <title>System administration philosophy of Ã†. Frish</title>
      <link>https://jreisinger.github.io/notes/posts/sysadmin-philosophy/</link>
      <pubDate>Sat, 01 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jreisinger.github.io/notes/posts/sysadmin-philosophy/</guid>
      <description> Know how things work. Plan it before you do it. Make it reversible (backups help a lot with this one). Make changes incrementally. Test, test, test, before you unleash it on the world.  </description>
    </item>
    
  </channel>
</rss>